import { v as Wt, u as da, e as sg, i as Am, j as Pm, t as Ky, s as pm, P as _m, b as gb, d as _b, S as mg } from './server.mjs';

const g = { slots: { root: "relative inline-flex items-center", base: ["w-full rounded-md border-0 placeholder:text-dimmed focus:outline-none disabled:cursor-not-allowed disabled:opacity-75", "transition-colors"], leading: "absolute inset-y-0 start-0 flex items-center", leadingIcon: "shrink-0 text-dimmed", leadingAvatar: "shrink-0", leadingAvatarSize: "", trailing: "absolute inset-y-0 end-0 flex items-center", trailingIcon: "shrink-0 text-dimmed" }, variants: { buttonGroup: { horizontal: { root: "group has-focus-visible:z-[1]", base: "group-not-only:group-first:rounded-e-none group-not-only:group-last:rounded-s-none group-not-last:group-not-first:rounded-none" }, vertical: { root: "group has-focus-visible:z-[1]", base: "group-not-only:group-first:rounded-b-none group-not-only:group-last:rounded-t-none group-not-last:group-not-first:rounded-none" } }, size: { xs: { base: "px-2 py-1 text-xs gap-1", leading: "ps-2", trailing: "pe-2", leadingIcon: "size-4", leadingAvatarSize: "3xs", trailingIcon: "size-4" }, sm: { base: "px-2.5 py-1.5 text-xs gap-1.5", leading: "ps-2.5", trailing: "pe-2.5", leadingIcon: "size-4", leadingAvatarSize: "3xs", trailingIcon: "size-4" }, md: { base: "px-2.5 py-1.5 text-sm gap-1.5", leading: "ps-2.5", trailing: "pe-2.5", leadingIcon: "size-5", leadingAvatarSize: "2xs", trailingIcon: "size-5" }, lg: { base: "px-3 py-2 text-sm gap-2", leading: "ps-3", trailing: "pe-3", leadingIcon: "size-5", leadingAvatarSize: "2xs", trailingIcon: "size-5" }, xl: { base: "px-3 py-2 text-base gap-2", leading: "ps-3", trailing: "pe-3", leadingIcon: "size-6", leadingAvatarSize: "xs", trailingIcon: "size-6" } }, variant: { outline: "text-highlighted bg-default ring ring-inset ring-accented", soft: "text-highlighted bg-elevated/50 hover:bg-elevated focus:bg-elevated disabled:bg-elevated/50", subtle: "text-highlighted bg-elevated ring ring-inset ring-accented", ghost: "text-highlighted bg-transparent hover:bg-elevated focus:bg-elevated disabled:bg-transparent dark:disabled:bg-transparent", none: "text-highlighted bg-transparent" }, color: { primary: "", secondary: "", success: "", info: "", warning: "", error: "", neutral: "" }, leading: { true: "" }, trailing: { true: "" }, loading: { true: "" }, highlight: { true: "" }, type: { file: "file:me-1.5 file:font-medium file:text-muted file:outline-none" } }, compoundVariants: [{ color: "primary", variant: ["outline", "subtle"], class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary" }, { color: "secondary", variant: ["outline", "subtle"], class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-secondary" }, { color: "success", variant: ["outline", "subtle"], class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-success" }, { color: "info", variant: ["outline", "subtle"], class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-info" }, { color: "warning", variant: ["outline", "subtle"], class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-warning" }, { color: "error", variant: ["outline", "subtle"], class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-error" }, { color: "primary", highlight: true, class: "ring ring-inset ring-primary" }, { color: "secondary", highlight: true, class: "ring ring-inset ring-secondary" }, { color: "success", highlight: true, class: "ring ring-inset ring-success" }, { color: "info", highlight: true, class: "ring ring-inset ring-info" }, { color: "warning", highlight: true, class: "ring ring-inset ring-warning" }, { color: "error", highlight: true, class: "ring ring-inset ring-error" }, { color: "neutral", variant: ["outline", "subtle"], class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-inverted" }, { color: "neutral", highlight: true, class: "ring ring-inset ring-inverted" }, { leading: true, size: "xs", class: "ps-7" }, { leading: true, size: "sm", class: "ps-8" }, { leading: true, size: "md", class: "ps-9" }, { leading: true, size: "lg", class: "ps-10" }, { leading: true, size: "xl", class: "ps-11" }, { trailing: true, size: "xs", class: "pe-7" }, { trailing: true, size: "sm", class: "pe-8" }, { trailing: true, size: "md", class: "pe-9" }, { trailing: true, size: "lg", class: "pe-10" }, { trailing: true, size: "xl", class: "pe-11" }, { loading: true, leading: true, class: { leadingIcon: "animate-spin" } }, { loading: true, leading: false, trailing: true, class: { trailingIcon: "animate-spin" } }], defaultVariants: { size: "md", color: "primary", variant: "outline" } }, c = Object.assign({ inheritAttrs: false }, { __name: "Input", __ssrInlineRender: true, props: Wt.mergeModels({ as: { type: null, required: false }, id: { type: String, required: false }, name: { type: String, required: false }, type: { type: null, required: false, default: "text" }, placeholder: { type: String, required: false }, color: { type: null, required: false }, variant: { type: null, required: false }, size: { type: null, required: false }, required: { type: Boolean, required: false }, autocomplete: { type: null, required: false, default: "off" }, autofocus: { type: Boolean, required: false }, autofocusDelay: { type: Number, required: false, default: 0 }, disabled: { type: Boolean, required: false }, highlight: { type: Boolean, required: false }, modelModifiers: { type: Object, required: false }, class: { type: null, required: false }, ui: { type: null, required: false }, icon: { type: String, required: false }, avatar: { type: Object, required: false }, leading: { type: Boolean, required: false }, leadingIcon: { type: String, required: false }, trailing: { type: Boolean, required: false }, trailingIcon: { type: String, required: false }, loading: { type: Boolean, required: false }, loadingIcon: { type: String, required: false } }, { modelValue: { type: null }, modelModifiers: {} }), emits: Wt.mergeModels(["update:modelValue", "blur", "change"], ["update:modelValue"]), setup(c2, { expose: p2, emit: v }) {
  const m = c2, f = v, b = Wt.useSlots(), [h, y] = Wt.useModel(c2, "modelValue"), x = da(), { emitFormBlur: z, emitFormInput: I, emitFormChange: q, size: S, color: k, id: B, name: A, highlight: R, disabled: C, emitFormFocus: $, ariaAttrs: V } = sg(m, { deferInputValidation: true }), { orientation: w, size: _ } = Am(m), { isLeading: N, isTrailing: F, leadingIconName: P, trailingIconName: j } = Pm(m), M = Wt.computed(() => _.value || S.value), O = Wt.computed(() => {
    var e2;
    return Ky({ extend: Ky(g), ...(null == (e2 = x.ui) ? void 0 : e2.input) || {} })({ type: m.type, color: k.value, variant: m.variant, size: null == M ? void 0 : M.value, loading: m.loading, highlight: R.value, leading: N.value || !!m.avatar || !!b.leading, trailing: F.value || !!b.trailing, buttonGroup: w.value });
  }), G = Wt.ref(null);
  function D(e2) {
    var _a;
    y.trim && (e2 = (_a = null == e2 ? void 0 : e2.trim()) != null ? _a : null), (y.number || "number" === m.type) && (e2 = mg(e2)), y.nullify && (e2 || (e2 = null)), h.value = e2, I();
  }
  function L(e2) {
    y.lazy || D(e2.target.value);
  }
  function T(e2) {
    const i2 = e2.target.value;
    y.lazy && D(i2), y.trim && (e2.target.value = i2.trim()), q(), f("change", e2);
  }
  function E(e2) {
    z(), f("blur", e2);
  }
  return p2({ inputRef: G }), (i2, n2, l2, a2) => {
    var r2;
    n2(pm.ssrRenderComponent(Wt.unref(_m), Wt.mergeProps({ as: c2.as, class: O.value.root({ class: [null == (r2 = m.ui) ? void 0 : r2.root, m.class] }) }, a2), { default: Wt.withCtx((n3, l3, a3, r3) => {
      var t2, d2, g2, p3, v2, f2;
      if (!l3) return [Wt.createVNode("input", Wt.mergeProps({ id: Wt.unref(B), ref_key: "inputRef", ref: G, type: c2.type, value: Wt.unref(h), name: Wt.unref(A), placeholder: c2.placeholder, class: O.value.base({ class: null == (p3 = m.ui) ? void 0 : p3.base }), disabled: Wt.unref(C), required: c2.required, autocomplete: c2.autocomplete }, { ...i2.$attrs, ...Wt.unref(V) }, { onInput: L, onBlur: E, onChange: T, onFocus: Wt.unref($) }), null, 16, ["id", "type", "value", "name", "placeholder", "disabled", "required", "autocomplete", "onFocus"]), Wt.renderSlot(i2.$slots, "default"), Wt.unref(N) || c2.avatar || b.leading ? (Wt.openBlock(), Wt.createBlock("span", { key: 0, class: O.value.leading({ class: null == (v2 = m.ui) ? void 0 : v2.leading }) }, [Wt.renderSlot(i2.$slots, "leading", {}, () => {
        var i3, n4, l4;
        return [Wt.unref(N) && Wt.unref(P) ? (Wt.openBlock(), Wt.createBlock(gb, { key: 0, name: Wt.unref(P), class: O.value.leadingIcon({ class: null == (i3 = m.ui) ? void 0 : i3.leadingIcon }) }, null, 8, ["name", "class"])) : c2.avatar ? (Wt.openBlock(), Wt.createBlock(_b, Wt.mergeProps({ key: 1, size: (null == (n4 = m.ui) ? void 0 : n4.leadingAvatarSize) || O.value.leadingAvatarSize() }, c2.avatar, { class: O.value.leadingAvatar({ class: null == (l4 = m.ui) ? void 0 : l4.leadingAvatar }) }), null, 16, ["size", "class"])) : Wt.createCommentVNode("", true)];
      })], 2)) : Wt.createCommentVNode("", true), Wt.unref(F) || b.trailing ? (Wt.openBlock(), Wt.createBlock("span", { key: 1, class: O.value.trailing({ class: null == (f2 = m.ui) ? void 0 : f2.trailing }) }, [Wt.renderSlot(i2.$slots, "trailing", {}, () => {
        var i3;
        return [Wt.unref(j) ? (Wt.openBlock(), Wt.createBlock(gb, { key: 0, name: Wt.unref(j), class: O.value.trailingIcon({ class: null == (i3 = m.ui) ? void 0 : i3.trailingIcon }) }, null, 8, ["name", "class"])) : Wt.createCommentVNode("", true)];
      })], 2)) : Wt.createCommentVNode("", true)];
      l3(`<input${pm.ssrRenderAttrs(Wt.mergeProps({ id: Wt.unref(B), ref_key: "inputRef", ref: G, type: c2.type, value: Wt.unref(h), name: Wt.unref(A), placeholder: c2.placeholder, class: O.value.base({ class: null == (t2 = m.ui) ? void 0 : t2.base }), disabled: Wt.unref(C), required: c2.required, autocomplete: c2.autocomplete }, { ...i2.$attrs, ...Wt.unref(V) }))}${r3}>`), pm.ssrRenderSlot(i2.$slots, "default", {}, null, l3, a3, r3), Wt.unref(N) || c2.avatar || b.leading ? (l3(`<span class="${pm.ssrRenderClass(O.value.leading({ class: null == (d2 = m.ui) ? void 0 : d2.leading }))}"${r3}>`), pm.ssrRenderSlot(i2.$slots, "leading", {}, () => {
        var i3, n4, t3;
        Wt.unref(N) && Wt.unref(P) ? l3(pm.ssrRenderComponent(gb, { name: Wt.unref(P), class: O.value.leadingIcon({ class: null == (i3 = m.ui) ? void 0 : i3.leadingIcon }) }, null, a3, r3)) : c2.avatar ? l3(pm.ssrRenderComponent(_b, Wt.mergeProps({ size: (null == (n4 = m.ui) ? void 0 : n4.leadingAvatarSize) || O.value.leadingAvatarSize() }, c2.avatar, { class: O.value.leadingAvatar({ class: null == (t3 = m.ui) ? void 0 : t3.leadingAvatar }) }), null, a3, r3)) : l3("<!---->");
      }, l3, a3, r3), l3("</span>")) : l3("<!---->"), Wt.unref(F) || b.trailing ? (l3(`<span class="${pm.ssrRenderClass(O.value.trailing({ class: null == (g2 = m.ui) ? void 0 : g2.trailing }))}"${r3}>`), pm.ssrRenderSlot(i2.$slots, "trailing", {}, () => {
        var i3;
        Wt.unref(j) ? l3(pm.ssrRenderComponent(gb, { name: Wt.unref(j), class: O.value.trailingIcon({ class: null == (i3 = m.ui) ? void 0 : i3.trailingIcon }) }, null, a3, r3)) : l3("<!---->");
      }, l3, a3, r3), l3("</span>")) : l3("<!---->");
    }), _: 3 }, l2));
  };
} }), p = c.setup;
c.setup = (i2, n2) => {
  const l2 = Wt.useSSRContext();
  return (l2.modules || (l2.modules = /* @__PURE__ */ new Set())).add("../node_modules/@nuxt/ui/dist/runtime/components/Input.vue"), p ? p(i2, n2) : void 0;
};

export { c };
//# sourceMappingURL=Input-B78WqLhZ.mjs.map
